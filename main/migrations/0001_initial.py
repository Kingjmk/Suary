# Generated by Django 3.0.3 on 2020-02-20 18:19

from django.db import migrations, connections
import main.models


def init_database_views(apps, schema_editor):
    post_counter_table_name = main.models.PostCounter._meta.db_table
    post_table_name = main.models.Post._meta.db_table
    db_name = main.models.PostCounter._meta.db

    # TODO: generate pipeline from model
    pipeline = [
        {
            "$project": {
                "_id": "$_id",
                "likes_count": True,
                "comments_count": True
            }
        },
        {

            "$lookup":
                {
                    "from": "main_likes",
                    "localField": "_id",
                    "foreignField": "post_id",
                    "as": "main_likes"
                }
        },
        {
            "$unwind":
                {
                    "path": "$main_likes",

                    "preserveNullAndEmptyArrays": True
                }
        },
        {
            "$addFields": {
                "main_likes": {
                    "$ifNull": [
                        "$main_likes",
                        {
                            "_id": None
                        }
                    ]
                }
            }
        },
        {
            "$lookup": {
                "from": "main_comments",
                "localField": "_id",
                "foreignField": "post_id",
                "as": "main_comments"
            }
        },
        {
            "$unwind": {
                "path": "$main_comments",
                "preserveNullAndEmptyArrays": True
            }
        },
        {
            "$addFields": {
                "main_comments": {
                    "$ifNull": [
                        "$main_comments",
                        {
                            "_id": None
                        }
                    ]
                }
            }
        },
        {
            "$group": {
                "_id": "$_id",
                "likes_count": {
                    "$sum": {
                        "$cond": {
                            "if": {
                                "$gt": [
                                    "$main_likes._id",
                                    None
                                ]
                            },
                            "then": 1,
                            "else": 0
                        }
                    }
                },
                "comments_count": {
                    "$sum": {
                        "$cond": {
                            "if": {
                                "$gt": [
                                    "$main_comments._id",
                                    None
                                ]
                            },
                            "then": 1,
                            "else": 0
                        }
                    }
                }
            }
        }
    ]

    cursor = connections[db_name].cursor()

    try:
        cursor.create_collection(
            post_counter_table_name,
            viewOn=post_table_name,
            pipeline=pipeline
        )

    except Exception as e:
        raise Exception('Create View Failed ' + str(e))


class Migration(migrations.Migration):
    initial = True

    dependencies = [
    ]

    operations = [
        migrations.RunPython(init_database_views, ),
    ]
